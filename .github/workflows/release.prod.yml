name: Production (Release)
on:
  push:
    branches:
      - main

env:
  NEXT_TELEMETRY_DISABLED: 1

jobs:
  audit:
    name: "[CI] ðŸ‘® Audit"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.x"
          cache: "npm"
      - name: Install Dependencies
        run: npm ci
      - name: Audit
        run: npm audit --audit-level=moderate

  lint:
    name: "[CI] ðŸ’… Lint"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.x"
          cache: "npm"
      - name: Install Dependencies
        run: npm ci
      - name: Lint
        run: npm run lint

  test:
    name: "[CI] ðŸ§ª Test"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.x"
          cache: "npm"
      - name: Install Dependencies
        run: npm ci
      - name: Test
        run: npm run test

  build:
    name: "[CI] ðŸ“¦ Build"
    runs-on: ubuntu-latest
    needs: [audit, lint, test]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.x"
          cache: "npm"
      - name: Install Dependencies
        run: npm ci
      - name: Build
        run: npm run build

  package:
    name: "[CI] ðŸ“¦ Create Package"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    needs: [audit, lint, test, build]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract Package Metadata
        id: package
        uses: martinbeentjes/npm-get-version-action@v1.3.1
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ghcr.io/${{ github.repository }}-${{ steps.package.outputs.current-version }}
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ghcr.io/${{ github.repository }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
